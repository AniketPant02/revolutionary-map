{"version":3,"sources":["Components/Map.js","App.js","serviceWorker.js","index.js"],"names":["initialViewState","longitude","latitude","zoom","pitch","bearing","Map","props","context","state","maciasVisible","villaVisible","obregonVisible","this","hoveredObject","path","pointerX","pointerY","hoverType","human","message","push","LOCATION_ORDER","LOCATION_NAME","PART","CHAPTER","QUOTE","COMMENTARY","className","style","position","zIndex","pointerEvents","left","top","layers","LineLayer","id","data","villa_path_data","opacity","pickable","getSourcePosition","d","start","getTargetPosition","end","getColor","getWidth","onHover","info","setState","object","x","y","obregon_path_data","ScatterplotLayer","villa_location_data","radiusScale","radiusMinPixels","radiusMaxPixels","getPosition","coordinates","getFillColor","obregon_location_data","macias_data","macias_path_data","TextLayer","getText","getTextAnchor","getAlignmentBaseline","getSize","controller","mapboxApiAccessToken","mapStyle","_renderTooltip","width","height","alignContent","display","flexDirection","fontFamily","fontSize","marginLeft","marginTop","onClick","e","prevState","_opacityRender","React","Component","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"s9cAkBMA,EAAmB,CACrBC,WAAY,WACZC,SAAU,UACVC,KAAM,IACNC,MAAO,EACPC,QAAS,GA4SEC,E,YAvSX,WAAYC,EAAOC,GAAU,IAAD,8BACxB,4CAAMD,EAAOC,KAERC,MAAQ,CACTC,eAAe,EACfC,cAAc,EACdC,gBAAgB,GANI,E,8EAUV,IAAD,EACyDC,KAAKJ,OAAS,GAAtEK,GADD,EACLC,KADK,EACCD,eAAeE,EADhB,EACgBA,SAAUC,EAD1B,EAC0BA,SAAUC,EADpC,EACoCA,UAAWC,EAD/C,EAC+CA,MAExDC,EAAU,GACd,IACkB,WAAVD,EACkB,SAAdD,GACAE,EAAQC,KAAK,mBAAqBP,EAAcQ,gBAChDF,EAAQC,KAAK,8BACbD,EAAQC,KAAK,oBAAsBP,EAAcS,eACjDH,EAAQC,KAAK,8BACbD,EAAQC,KAAK,kBAAoBP,EAAcU,KAAO,KAAOV,EAAcW,SAC3EL,EAAQC,KAAK,+BAEM,UAAdH,IACLE,EAAQC,KAAK,aAAeP,EAAcS,eAC1CH,EAAQC,KAAK,8BACbD,EAAQC,KAAK,mBAAqBP,EAAcQ,gBAChDF,EAAQC,KAAK,8BACbD,EAAQC,KAAK,kBAAoBP,EAAcU,KAAO,KAAOV,EAAcW,SAC3EL,EAAQC,KAAK,8BACbD,EAAQC,KAAK,UAAYP,EAAcY,OACvCN,EAAQC,KAAK,8BACbD,EAAQC,KAAK,eAAiBP,EAAca,YAC5CP,EAAQC,KAAK,+BAGF,YAAVF,GAAiC,UAAVA,IACV,SAAdD,GACAE,EAAQC,KAAK,oBAAsBP,EAAcS,eACjDH,EAAQC,KAAK,8BACbD,EAAQC,KAAK,mBAAqBP,EAAcQ,gBAChDF,EAAQC,KAAK,gCAGbD,EAAQC,KAAK,mBAAqBP,EAAcQ,gBAChDF,EAAQC,KAAK,8BACbD,EAAQC,KAAK,aAAeP,EAAcS,eAC1CH,EAAQC,KAAK,gCAMzB,UASA,OANeP,GACX,yBAAKc,UAAU,UAAUC,MAAO,CAAEC,SAAU,WAAYC,OAAQ,EAAGC,cAAe,OAAQC,KAAMjB,EAAUkB,IAAKjB,IAC1GG,K,qCAOED,GAAO,IAAD,EACuCN,KAAKJ,OAAS,GAA9DE,EADS,EACTA,aAAcC,EADL,EACKA,eAAgBF,EADrB,EACqBA,cACtC,MAAc,WAAVS,GACsB,IAAlBT,EACO,EAGA,GAGI,UAAVS,GACgB,IAAjBR,EACO,EAGA,GAGI,YAAVQ,GACkB,IAAnBP,EACO,EAGA,QALV,I,+BAUC,IAAD,SACmDC,KAAKJ,OAAS,GAA9DE,EADH,EACGA,aAAcC,EADjB,EACiBA,eAAgBF,EADjC,EACiCA,cAChCyB,EAAS,CACXxB,GACA,IAAIyB,IAAU,CACVC,GAAI,aACJC,KAAMC,EACNC,QAAS,EACTC,UAAU,EACVC,kBAAmB,SAAAC,GAAC,OAAIA,EAAEC,OAC1BC,kBAAmB,SAAAF,GAAC,OAAIA,EAAEG,KAC1BC,SAAU,CAAC,EAAG,IAAK,GACnBC,SAAU,IACVC,QAAS,SAAAC,GAAI,OAAI,EAAKC,SAAS,CAC3BrC,cAAeoC,EAAKE,OACpBpC,SAAUkC,EAAKG,EACfpC,SAAUiC,EAAKI,EACfpC,UAAW,OACXC,MAAO,aAGfP,GACA,IAAIwB,IAAU,CACVC,GAAI,eACJC,KAAMiB,EACNf,QAAS,EACTC,UAAU,EACVC,kBAAmB,SAAAC,GAAC,OAAIA,EAAEC,OAC1BC,kBAAmB,SAAAF,GAAC,OAAIA,EAAEG,KAC1BC,SAAU,CAAC,EAAG,EAAG,GACjBC,SAAU,IACVC,QAAS,SAAAC,GAAI,OAAI,EAAKC,SAAS,CAC3BrC,cAAeoC,EAAKE,OACpBpC,SAAUkC,EAAKG,EACfpC,SAAUiC,EAAKI,EACfpC,UAAW,OACXC,MAAO,eAGfR,GACA,IAAI6C,IAAiB,CACjBnB,GAAI,kBACJC,KAAMmB,EACNhB,UAAU,EACVD,QAAS,GACTkB,YAAa,GACbC,gBAAiB,GACjBC,gBAAiB,GACjBC,YAAa,SAAAlB,GAAC,OAAIA,EAAEmB,aACpBC,aAAc,SAAApB,GAAC,MAAI,CAAC,EAAG,IAAK,IAC5BM,QAAS,SAAAC,GAAI,OAAI,EAAKC,SAAS,CAC3BrC,cAAeoC,EAAKE,OACpBpC,SAAUkC,EAAKG,EACfpC,SAAUiC,EAAKI,EACfpC,UAAW,QACXC,MAAO,aAGfP,GACA,IAAI4C,IAAiB,CACjBnB,GAAI,oBACJC,KAAM0B,EACNvB,UAAU,EACVD,QAAS,GACTkB,YAAa,GACbC,gBAAiB,GACjBC,gBAAiB,GACjBC,YAAa,SAAAlB,GAAC,OAAIA,EAAEmB,aACpBC,aAAc,SAAApB,GAAC,MAAI,CAAC,EAAG,EAAG,IAC1BM,QAAS,SAAAC,GAAI,OAAI,EAAKC,SAAS,CAC3BrC,cAAeoC,EAAKE,OACpBpC,SAAUkC,EAAKG,EACfpC,SAAUiC,EAAKI,EACfpC,UAAW,QACXC,MAAO,eAGfT,GACA,IAAI8C,IAAiB,CACjBnB,GAAI,mBACJC,KAAM2B,EACNxB,UAAU,EACVD,QAAS,GACTkB,YAAa,GACbC,gBAAiB,GACjBC,gBAAiB,GACjBC,YAAa,SAAAlB,GAAC,OAAIA,EAAEmB,aACpBC,aAAc,SAAApB,GAAC,MAAI,CAAC,EAAG,GAAI,MAC3BM,QAAS,SAAAC,GAAI,OAAI,EAAKC,SAAS,CAC3BrC,cAAeoC,EAAKE,OACpBpC,SAAUkC,EAAKG,EACfpC,SAAUiC,EAAKI,EACfpC,UAAW,QACXC,MAAO,cAGfT,GACA,IAAI0B,IAAU,CACVC,GAAI,cACJC,KAAM4B,EACN1B,QAAS,EACTC,UAAU,EACVC,kBAAmB,SAAAC,GAAC,OAAIA,EAAEC,OAC1BC,kBAAmB,SAAAF,GAAC,OAAIA,EAAEG,KAC1BC,SAAU,CAAC,EAAG,GAAI,KAClBC,SAAU,IACVC,QAAS,SAAAC,GAAI,OAAI,EAAKC,SAAS,CAC3BrC,cAAeoC,EAAKE,OACpBpC,SAAUkC,EAAKG,EACfpC,SAAUiC,EAAKI,EACfpC,UAAW,OACXC,MAAO,cAGfP,GACA,IAAIuD,IAAU,CACV9B,GAAI,+BACJC,KAAM0B,EACNH,YAAa,SAAAlB,GAAC,OAAIA,EAAEmB,aACpBM,QAAS,SAAAzB,GAAC,OAAIA,EAAErB,gBAChB+C,cAAe,SACfC,qBAAsB,SACtBC,QAAS,GACTxB,SAAU,CAAC,IAAK,IAAK,OAEzBpC,GACA,IAAIwD,IAAU,CACV9B,GAAI,6BACJC,KAAMmB,EACNI,YAAa,SAAAlB,GAAC,OAAIA,EAAEmB,aACpBM,QAAS,SAAAzB,GAAC,OAAIA,EAAErB,gBAChB+C,cAAe,SACfC,qBAAsB,SACtBC,QAAS,GACTxB,SAAU,CAAC,IAAK,IAAK,OAEzBrC,GACA,IAAIyD,IAAU,CACV9B,GAAI,8BACJC,KAAM2B,EACNJ,YAAa,SAAAlB,GAAC,OAAIA,EAAEmB,aACpBM,QAAS,SAAAzB,GAAC,OAAIA,EAAErB,gBAChB+C,cAAe,SACfC,qBAAsB,SACtBC,QAAS,GACTxB,SAAU,CAAC,IAAK,IAAK,QAI7B,OACI,yBAAKnB,UAAU,OAEX,kBAAC,IAAD,CACI5B,iBAAkBA,EAClBwE,YAAY,EACZrC,OAAQA,GAER,kBAAC,IAAD,CAAWsC,qBAxQH,6FAyQJC,SAAS,uDACZ7D,KAAK8D,kBAGV,yBAAK/C,UAAU,eAAeC,MAAO,CAAE+C,MAAO,IAAKC,OAAQ,IAAKC,aAAc,OAAQC,QAAS,OAAQC,cAAe,SAAUC,WAAY,QAASC,SAAU,KAC3J,yBAAKtD,UAAU,SAASC,MAAO,CAAEkD,QAAS,OAAQC,cAAe,MAAOG,YAAa,GAAIC,WAAY,KACjG,yBAAKxD,UAAU,cAAf,MAA+B,+CAC/B,yBAAKA,UAAU,eAAeyD,QAAS,SAAAC,GAAC,OACpC,EAAKnC,UAAS,SAAAoC,GAAS,MAAK,CACxB7E,eAAgB6E,EAAU7E,oBAG9B,yBAAKkB,UAAU,YAAYC,MAAO,CAAEW,QAAS3B,KAAK2E,eAAuB,YACrE,yBAAK5D,UAAU,cAI3B,yBAAKA,UAAU,QAAQC,MAAO,CAAEkD,QAAS,OAAQC,cAAe,MAAOG,YAAa,KAChF,yBAAKvD,UAAU,aAAf,OAA+B,4CAC/B,yBAAKA,UAAU,cAAcyD,QAAS,SAAAC,GAAC,OAAI,EAAKnC,UAAS,SAAAoC,GAAS,MAAK,CACnE5E,cAAe4E,EAAU5E,mBAEzB,yBAAKiB,UAAU,aAAaC,MAAO,CAAEW,QAAS3B,KAAK2E,eAAuB,WACtE,yBAAK5D,UAAU,cAI3B,yBAAKA,UAAU,UAAUC,MAAO,CAAEkD,QAAS,OAAQC,cAAe,MAAOG,YAAa,KAClF,yBAAKvD,UAAU,eAAf,KAA+B,4CAC/B,yBAAKA,UAAU,gBAAgByD,QAAS,SAAAC,GAAC,OAAI,EAAKnC,UAAS,SAAAoC,GAAS,MAAK,CACT3E,gBAAiB2E,EAAU3E,qBAEvF,yBAAKgB,UAAU,aAAaC,MAAO,CAAEW,QAAS3B,KAAK2E,eAAuB,aACtE,yBAAK5D,UAAU,oB,GA9R7B6D,IAAMC,WCfTC,E,iLANX,OACE,kBAAC,EAAD,U,GAJYD,aCSEE,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.11185ea5.chunk.js","sourcesContent":["import React from 'react';\r\nimport DeckGL from '@deck.gl/react';\r\nimport { ScatterplotLayer, TextLayer, LineLayer } from '@deck.gl/layers';\r\nimport { StaticMap } from 'react-map-gl';\r\nimport \"./Map.css\";\r\n\r\n// data to be used for Deck.gl layers\r\nimport macias_data from './underdogs_locations.json';\r\nimport macias_path_data from './underdogs_paths.json';\r\nimport villa_path_data from './villa_paths.json';\r\nimport obregon_path_data from './obregon_paths.json';\r\nimport obregon_location_data from './obregon_locations.json';\r\nimport villa_location_data from './villa_locations.json';\r\n\r\n// Set your mapbox access token here\r\nconst MAPBOX_ACCESS_TOKEN = \"pk.eyJ1IjoicGFudDIwMDIiLCJhIjoiY2prenlwb2ZtMHlnMjNxbW1ld3VxYWZ4cCJ9.rOb8DhCzsysBIw69MxyWKg\";\r\n\r\n// Initial viewport settings\r\nconst initialViewState = {\r\n    longitude: -103.160792,\r\n    latitude: 21.101122,\r\n    zoom: 6.5,\r\n    pitch: 0,\r\n    bearing: 0\r\n};\r\n\r\n\r\nclass Map extends React.Component {\r\n    constructor(props, context) {\r\n        super(props, context);\r\n\r\n        this.state = {\r\n            maciasVisible: true,\r\n            villaVisible: true,\r\n            obregonVisible: true\r\n        };\r\n    };\r\n\r\n    _renderTooltip() {\r\n        const { path, hoveredObject, pointerX, pointerY, hoverType, human } = this.state || {};\r\n\r\n        var message = [];\r\n        try {\r\n            if (human === \"macias\") {\r\n                if (hoverType === \"path\") {\r\n                    message.push(\"Location Order: \" + hoveredObject.LOCATION_ORDER);\r\n                    message.push(<br></br>);\r\n                    message.push(\"On the path for: \" + hoveredObject.LOCATION_NAME);\r\n                    message.push(<br></br>);\r\n                    message.push(\"Part, Chapter: \" + hoveredObject.PART + \", \" + hoveredObject.CHAPTER);\r\n                    message.push(<br></br>);\r\n                }\r\n                else if (hoverType === \"point\") {\r\n                    message.push(\"Location: \" + hoveredObject.LOCATION_NAME);\r\n                    message.push(<br></br>);\r\n                    message.push(\"Location Order: \" + hoveredObject.LOCATION_ORDER);\r\n                    message.push(<br></br>);\r\n                    message.push(\"Part, Chapter: \" + hoveredObject.PART + \", \" + hoveredObject.CHAPTER);\r\n                    message.push(<br></br>);\r\n                    message.push(\"Quote: \" + hoveredObject.QUOTE);\r\n                    message.push(<br></br>);\r\n                    message.push(\"Commentary: \" + hoveredObject.COMMENTARY);\r\n                    message.push(<br></br>);\r\n                }\r\n            }\r\n            else if (human === \"obregon\" || human === \"villa\") {\r\n                if (hoverType === \"path\") {\r\n                    message.push(\"On the path for: \" + hoveredObject.LOCATION_NAME);\r\n                    message.push(<br></br>);\r\n                    message.push(\"Location Order: \" + hoveredObject.LOCATION_ORDER);\r\n                    message.push(<br></br>);\r\n                }\r\n                else {\r\n                    message.push(\"Location Order: \" + hoveredObject.LOCATION_ORDER);\r\n                    message.push(<br></br>);\r\n                    message.push(\"Location: \" + hoveredObject.LOCATION_NAME);\r\n                    message.push(<br></br>);\r\n                }\r\n\r\n            }\r\n\r\n        }\r\n        catch{\r\n\r\n        }\r\n        var toReturn = hoveredObject && (\r\n            <div className=\"tooltip\" style={{ position: 'absolute', zIndex: 1, pointerEvents: 'none', left: pointerX, top: pointerY }}>\r\n                {message}\r\n            </div>\r\n        )\r\n\r\n        return toReturn;\r\n    }\r\n\r\n    _opacityRender(human){\r\n        const { villaVisible, obregonVisible, maciasVisible } = this.state || {};\r\n        if (human === \"macias\") {\r\n            if (maciasVisible === true) {\r\n                return 1.0\r\n            }\r\n            else {\r\n                return 0.4\r\n            }\r\n        }\r\n        else if (human === \"villa\") {\r\n            if (villaVisible === true) {\r\n                return 1.0\r\n            }\r\n            else {\r\n                return 0.4\r\n            }\r\n        }\r\n        else if (human === \"obregon\") {\r\n            if (obregonVisible === true) {\r\n                return 1.0\r\n            }\r\n            else {\r\n                return 0.4\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { villaVisible, obregonVisible, maciasVisible } = this.state || {};\r\n        const layers = [\r\n            villaVisible &&\r\n            new LineLayer({\r\n                id: 'villa-path',\r\n                data: villa_path_data,\r\n                opacity: 1.0,\r\n                pickable: true,\r\n                getSourcePosition: d => d.start,\r\n                getTargetPosition: d => d.end,\r\n                getColor: [8, 138, 3],\r\n                getWidth: 5.5,\r\n                onHover: info => this.setState({\r\n                    hoveredObject: info.object,\r\n                    pointerX: info.x,\r\n                    pointerY: info.y,\r\n                    hoverType: \"path\",\r\n                    human: \"villa\"\r\n                })\r\n            }),\r\n            obregonVisible &&\r\n            new LineLayer({\r\n                id: 'obregon-path',\r\n                data: obregon_path_data,\r\n                opacity: 1.0,\r\n                pickable: true,\r\n                getSourcePosition: d => d.start,\r\n                getTargetPosition: d => d.end,\r\n                getColor: [0, 0, 0],\r\n                getWidth: 5.5,\r\n                onHover: info => this.setState({\r\n                    hoveredObject: info.object,\r\n                    pointerX: info.x,\r\n                    pointerY: info.y,\r\n                    hoverType: \"path\",\r\n                    human: \"obregon\"\r\n                })\r\n            }),\r\n            villaVisible &&\r\n            new ScatterplotLayer({\r\n                id: 'villa-locations',\r\n                data: villa_location_data,\r\n                pickable: true,\r\n                opacity: 0.4,\r\n                radiusScale: 15,\r\n                radiusMinPixels: 10,\r\n                radiusMaxPixels: 20,\r\n                getPosition: d => d.coordinates,\r\n                getFillColor: d => [8, 138, 3],\r\n                onHover: info => this.setState({\r\n                    hoveredObject: info.object,\r\n                    pointerX: info.x,\r\n                    pointerY: info.y,\r\n                    hoverType: \"point\",\r\n                    human: \"villa\"\r\n                })\r\n            }),\r\n            obregonVisible &&\r\n            new ScatterplotLayer({\r\n                id: 'obregon-locations',\r\n                data: obregon_location_data,\r\n                pickable: true,\r\n                opacity: 0.4,\r\n                radiusScale: 15,\r\n                radiusMinPixels: 10,\r\n                radiusMaxPixels: 20,\r\n                getPosition: d => d.coordinates,\r\n                getFillColor: d => [0, 0, 0],\r\n                onHover: info => this.setState({\r\n                    hoveredObject: info.object,\r\n                    pointerX: info.x,\r\n                    pointerY: info.y,\r\n                    hoverType: \"point\",\r\n                    human: \"obregon\"\r\n                })\r\n            }),\r\n            maciasVisible &&\r\n            new ScatterplotLayer({\r\n                id: 'macias-locations',\r\n                data: macias_data,\r\n                pickable: true,\r\n                opacity: 0.4,\r\n                radiusScale: 15,\r\n                radiusMinPixels: 10,\r\n                radiusMaxPixels: 20,\r\n                getPosition: d => d.coordinates,\r\n                getFillColor: d => [6, 30, 138],\r\n                onHover: info => this.setState({\r\n                    hoveredObject: info.object,\r\n                    pointerX: info.x,\r\n                    pointerY: info.y,\r\n                    hoverType: \"point\",\r\n                    human: \"macias\"\r\n                })\r\n            }),\r\n            maciasVisible &&\r\n            new LineLayer({\r\n                id: 'macias-path',\r\n                data: macias_path_data,\r\n                opacity: 1.0,\r\n                pickable: true,\r\n                getSourcePosition: d => d.start,\r\n                getTargetPosition: d => d.end,\r\n                getColor: [6, 30, 138],\r\n                getWidth: 5.5,\r\n                onHover: info => this.setState({\r\n                    hoveredObject: info.object,\r\n                    pointerX: info.x,\r\n                    pointerY: info.y,\r\n                    hoverType: \"path\",\r\n                    human: \"macias\"\r\n                })\r\n            }),\r\n            obregonVisible &&\r\n            new TextLayer({\r\n                id: 'obregon-locations-order-text',\r\n                data: obregon_location_data,\r\n                getPosition: d => d.coordinates,\r\n                getText: d => d.LOCATION_ORDER,\r\n                getTextAnchor: 'middle',\r\n                getAlignmentBaseline: 'center',\r\n                getSize: 30,\r\n                getColor: [255, 255, 255]\r\n            }),\r\n            villaVisible &&\r\n            new TextLayer({\r\n                id: 'villa-locations-order-text',\r\n                data: villa_location_data,\r\n                getPosition: d => d.coordinates,\r\n                getText: d => d.LOCATION_ORDER,\r\n                getTextAnchor: 'middle',\r\n                getAlignmentBaseline: 'center',\r\n                getSize: 30,\r\n                getColor: [255, 255, 255]\r\n            }),\r\n            maciasVisible &&\r\n            new TextLayer({\r\n                id: 'macias-locations-order-text',\r\n                data: macias_data,\r\n                getPosition: d => d.coordinates,\r\n                getText: d => d.LOCATION_ORDER,\r\n                getTextAnchor: 'middle',\r\n                getAlignmentBaseline: 'center',\r\n                getSize: 30,\r\n                getColor: [255, 255, 255]\r\n            })\r\n        ];\r\n        let human = \"\";\r\n        return (\r\n            <div className=\"Map\">\r\n                {/* Mr. Clayton, your comment is over there. */}\r\n                <DeckGL\r\n                    initialViewState={initialViewState}\r\n                    controller={true}\r\n                    layers={layers}\r\n                >\r\n                    <StaticMap mapboxApiAccessToken={MAPBOX_ACCESS_TOKEN}\r\n                        mapStyle=\"mapbox://styles/pant2002/ck2dfxbwb1dnj1cqlyrw13l9l\" />\r\n                    {this._renderTooltip()}\r\n                </DeckGL>\r\n\r\n                <div className=\"controlPanel\" style={{ width: 200, height: 150, alignContent: \"left\", display: \"flex\", flexDirection: 'column', fontFamily: 'serif', fontSize: 13 }}>\r\n                    <div className=\"macias\" style={{ display: \"flex\", flexDirection: \"row\", marginLeft: -55, marginTop: -15 }}>\r\n                        <div className=\"maciasText\">   <pre>Macías    </pre></div>\r\n                        <div className=\"maciasLegend\" onClick={e => \r\n                            this.setState(prevState => ({\r\n                                maciasVisible: !prevState.maciasVisible\r\n                            }))\r\n                            }>\r\n                            <div className=\"line blue\" style={{ opacity: this._opacityRender(human = \"macias\") }}>\r\n                                <div className=\"circle\" ></div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"villa\" style={{ display: \"flex\", flexDirection: \"row\", marginLeft: -55 }}>\r\n                        <div className=\"villaText\">    <pre>Villa     </pre></div>\r\n                        <div className=\"villaLegend\" onClick={e => this.setState(prevState => ({\r\n                            villaVisible: !prevState.villaVisible\r\n                        }))}>\r\n                            <div className=\"line green\" style={{ opacity: this._opacityRender(human = \"villa\") }}>\r\n                                <div className=\"circle\"></div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"obregon\" style={{ display: \"flex\", flexDirection: \"row\", marginLeft: -55 }}>\r\n                        <div className=\"obregonText\">  <pre>Obregon   </pre></div>\r\n                        <div className=\"obregonLegend\" onClick={e => this.setState(prevState => ({\r\n                                                                                        obregonVisible: !prevState.obregonVisible\r\n                                                                                        }))}>\r\n                            <div className=\"line black\" style={{ opacity: this._opacityRender(human = \"obregon\") }}>\r\n                                <div className=\"circle\"></div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Map","import React, { Component } from 'react';\nimport Map from \"./Components/Map\";\n\nclass App extends Component {\n\n  render() {\n    return (\n      <Map />\n    );\n  }\n}\n\nexport default App","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}